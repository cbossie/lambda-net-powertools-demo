{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application. This template is partially managed by Amazon.Lambda.Annotations (v0.13.2.0).",
  "Globals": {
    "Function": {
      "Tracing": "Active",
      "Environment": {
        "Variables": {
          "POWERTOOLS_METRICS_NAMESPACE": "PowertoolsDemoMetrics",
          "POWERTOOLS_LOG_LEVEL": "Debug",
          "POWERTOOLS_LOGGER_CASE": "PascalCase",
          "POWERTOOLS_LOGGER_LOG_EVENT": "True",
          "POWERTOOLS_LOGGER_SAMPLE_RATE": "0",
          "POWERTOOLS_SERVICE_NAME": "PTDemo",
          "POWERTOOLS_TRACE_DISABLED": "False",
          "POWERTOOLS_TRACER_CAPTURE_RESPONSE": "True",
          "POWERTOOLS_TRACER_CAPTURE_ERROR": "True",
          "TABLE": {
            "Ref": "DataTable"
          },
          "BUCKET": {
            "Ref": "StorageBucket"
          },
          "PARAMETER": {
            "Ref": "TestParameter"
          },
          "SECRET": {
            "Ref": "TestSecret"
          }
        }
      }
    }
  },
  "Resources": {
    "TestParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/powertools/param1",
        "Type": "String",
        "Description": "SSM Parameter for Testing",
        "Value": "TestValue"
      }
    },
    "TestSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Name": "PowerToolsSecret",
        "SecretString": "TestEnvironment"
      }
    },
    "DataTable": {
      "Type": "AWS::Serverless::SimpleTable",
      "Properties": {
        "TableName": "dataTable",
        "PrimaryKey": {
          "Name": "id",
          "Type": "String"
        }
      }
    },
    "StorageBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "-",
            [
              "annotations-bucket",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        }
      }
    },
    "DefaultFunction": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootGet"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_Default_Generated::Default",
        "Events": {
          "RootGet": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/",
              "Method": "GET"
            }
          }
        }
      }
    },
    "ReadParameter": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootGet"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_ReadParameter_Generated::ReadParameter",
        "Events": {
          "RootGet": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/readparameter",
              "Method": "GET"
            }
          }
        }
      }
    },
    "WriteParameter": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootPost"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_WriteParameter_Generated::WriteParameter",
        "Events": {
          "RootPost": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/writeparameter",
              "Method": "POST"
            }
          }
        }
      }
    },
    "WriteTableItem": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootPost"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_WriteTableItem_Generated::WriteTableItem",
        "Events": {
          "RootPost": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/writetableitem",
              "Method": "POST"
            }
          }
        }
      }
    },
    "ReadTableItem": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootGet"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_ReadTableItem_Generated::ReadTableItem",
        "Events": {
          "RootGet": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/readtableitem/{id}",
              "Method": "GET"
            }
          }
        }
      }
    },
    "ReadS3": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootGet"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_ReadS3Item_Generated::ReadS3Item",
        "Events": {
          "RootGet": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/readS3item/{key}",
              "Method": "GET"
            }
          }
        }
      }
    },
    "WriteS3": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootPost"
        ]
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_WriteS3Item_Generated::WriteS3Item",
        "Events": {
          "RootPost": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/writeS3item",
              "Method": "POST"
            }
          }
        }
      }
    },
    "XRayFunction": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations"
      },
      "Properties": {
        "Runtime": "dotnet6",
        "CodeUri": ".",
        "MemorySize": 1024,
        "Timeout": 30,
        "Role": "arn:aws:iam::425173371283:role/lambda-role",
        "PackageType": "Zip",
        "Handler": "LambdaAnnotationsWithPowertools::LambdaAnnotationsWithPowertools.Functions_DemoFunction_Generated::DemoFunction"
      }
    }
  },
  "Outputs": {
    "ApiURL": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
      }
    }
  }
}